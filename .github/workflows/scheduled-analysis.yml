name: Scheduled Productivity Analysis

on:
  schedule:
    # Run weekly analysis every Sunday at 8:00 PM UTC
    - cron: '0 20 * * 0'
    # Run monthly analysis on the 1st of each month at 8:00 PM UTC
    - cron: '0 20 1 * *'
  workflow_dispatch:  # Allow manual triggering

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up environment variables and credentials
        env:
          GOOGLE_API_KEY_GEMINI: ${{ secrets.GOOGLE_API_KEY_GEMINI }}
          GOOGLE_DOC_ID: ${{ secrets.GOOGLE_DOC_ID }}
        run: |
          # Output the key from the secret to a file.
          echo "${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}" > key.json
          echo "Service account key file created"

          # Check if the file exists and has content (without revealing sensitive data)
          if [ -s key.json ]; then
            echo "Service account key file exists and has content"
          else
            echo "Error: Service account key file is empty or does not exist"
            exit 1
          fi

          #Set Environment Variables
          echo "GOOGLE_APPLICATION_CREDENTIALS=key.json" >> $GITHUB_ENV
          echo "GOOGLE_API_KEY_GEMINI=$GOOGLE_API_KEY_GEMINI" >> $GITHUB_ENV
          echo "GOOGLE_DOC_ID=$GOOGLE_DOC_ID" >> $GITHUB_ENV
          echo "WRITE_TO_DOC=true" >> $GITHUB_ENV
          echo "Environment variables set:"
          echo "GOOGLE_APPLICATION_CREDENTIALS=key.json"
          echo "GOOGLE_DOC_ID is set: $(if [ -n \"$GOOGLE_DOC_ID\" ]; then echo 'Yes'; else echo 'No'; fi)"
          echo "GOOGLE_API_KEY_GEMINI is set: $(if [ -n \"$GOOGLE_API_KEY_GEMINI\" ]; then echo 'Yes'; else echo 'No'; fi)"
          echo "WRITE_TO_DOC=true"

      - name: Determine analysis type
        id: analysis-type
        run: |
          # Check if it's the 1st of the month
          if [[ "$(date +%d)" == "01" ]]; then
            echo "ANALYSIS_TYPE=monthly" >> $GITHUB_ENV
            echo "Running monthly analysis"
          else
            echo "ANALYSIS_TYPE=weekly" >> $GITHUB_ENV
            echo "Running weekly analysis"
          fi

      - name: Run analysis
        run: |
          echo "Starting analysis with automated flag"
          python src/main.py --analyze --automated --write-to-doc
          echo "Analysis complete"
